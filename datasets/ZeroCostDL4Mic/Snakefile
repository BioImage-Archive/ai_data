import json
import os

import pathlib

# Read the input JSON file
with open("metadata.json") as f:
    metadata = json.load(f)

projects_metadata = list(metadata.keys())
# projects, folders, filenames = glob_wildcards(
#     "data/{project}/{folder}/{filename}"
# )

projects, folders, filenames = glob_wildcards(
    "data/{project,[^/]+}/{folder}/{filename,[^/]+}"
)


print(projects)

# Define a rule for generating JSON files
rule all:
    input:
        # expand("{key}.json", key=metadata.keys())
        # expand("data/{project}", project=projects_metdata),
        expand("output/{project}/{folder}/{filename}.metadata.json",zip,project=projects, folder=folders, filename=filenames),


# rule download_and_extract:
#     input:
#         metadata_json="metadata.json",
#     output:
#         folder=directory("data/{project}"),
#         archive=temp("{project}.zip"),
#     params:
#         url=lambda wildcards, input: metadata[wildcards.project]["url"],
#     shell:
#         """
#         wget "{params.url}" -O "{output.archive}"
#         mkdir -p "{output.folder}"
#         unzip "{output.archive}" -d "{output.folder}"
#         """
rule collate_json:
    input:
        json=expand("output/{project,[^/]+}/{folder}/{filename,[^/]+}.metadata.json",filename=filenames,allow_missing=True),
    output:
        json="output/{project,[^/]+}/metadata.json",
        csv="output/{project,[^/]+}/metadata.csv",
    run:
        breakpoint()


rule process_image:
    input:
        filename="data/{project,[^/]+}/{folder}/{filename,[^/]+}",
    output:
        json="output/{project,[^/]+}/{folder}/{filename,[^/]+}.metadata.json",
    run:
        # get parent directory of input.filename
        path = pathlib.Path(input.filename)
        parent_dir = path.parent
        # metadata_dict = metadata[wildcards.project][wildcard.folder]
        metadata_dict = metadata[wildcards.project]["data"][wildcards.folder]
        # create the metadata file
        with open(output.json, "w") as f:
            json.dump(metadata_dict, f, indent=4)
